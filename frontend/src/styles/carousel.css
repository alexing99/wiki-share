.carousel {
  border: black solid 3px;
  margin: 20px;
  padding: 10px;
  background-color: #f8f9fa;
  border-radius: 10px;
  border-color: black;
  position: relative;
}
h1 {
  margin-bottom: 25px;
  margin-top: 0px;
}
.root-post {
  background-color: #3366cc; /* Transparent red */
}

.post-headers {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-around;
}
.ancestor-headers {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-around;
}

.post-content {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.post-details {
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  padding-top: 10px;
}

p {
  font-family: Arial, Helvetica, sans-serif;
}

.highlight {
  background-color: yellow;
}

.post-button {
  position: sticky;
  top: 10px;
  left: 800px;
  margin-right: 20px;
  border-color: #ffff00;
  box-shadow: #ffff00;
  background-color: #ffff00;

  z-index: 999;
}
.custom-highlight ::selection {
  background-color: #ffff00;
}
.custom-highlight {
  cursor: url("../images/highlighter.png"), text;
}
.article-container {
  position: relative;
}
.article-window {
  margin-top: 10px;
  margin-bottom: 10px;
}

.back-button {
  position: sticky;
  top: 10px;
  right: 800px;
  margin-left: 20px;

  z-index: 999; /* Ensure the button is on top of the article content */
}
.nextButt {
  position: absolute; /* Positions the button absolutely relative to the carousel */
  top: 50%; /* Vertically centers the button within the carousel height */
  transform: translateY(-50%); /* Adjusts vertical positioning for centering */
  right: -4%; /* Positions the button at the right edge of the carousel */
  display: block; /* Makes the button element behave like a block-level element */
  padding: 10px 20px; /* Adjust padding for button size and content spacing */
  background-color: #000; /* Button background color (adjust as needed) */
  color: #fff; /* Button text color (adjust as needed) */
  border: none; /* Removes default button border */
  cursor: pointer; /* Sets cursor to pointer on hover */
  z-index: 2; /* Ensures the button appears above carousel content (adjust if needed) */
  width: 100px; /* Sets the width of the button */
  height: 100px; /* Sets the height of the button */
  border-radius: 50%; /* Makes the button a circle */
  line-height: 50px; /* Ensures text is vertically centered within the circle */
  text-align: center; /* Centers the text horizontally within the circle */
  opacity: 70%;
}
.backButt {
  position: absolute; /* Positions the button absolutely relative to the carousel */
  top: 50%; /* Vertically centers the button within the carousel height */
  transform: translateY(-50%); /* Adjusts vertical positioning for centering */
  left: -0%; /* Positions the button off-screen to the left by 50% of its width */
  display: block; /* Makes the button element behave like a block-level element */
  width: 100px; /* Sets the width of the button */
  height: 100px; /* Sets the height of the button */
  border-radius: 50%; /* Makes the button a circle */
  line-height: 50px; /* Ensures text is vertically centered within the circle */
  text-align: center; /* Centers the text horizontally within the circle */
  background-color: #000; /* Button background color (adjust as needed) */
  color: #fff; /* Button text color (adjust as needed) */
  border: none; /* Removes default button border */
  cursor: pointer; /* Sets cursor to pointer on hover */
  z-index: 2; /* Ensures the button appears above carousel content (adjust if needed) */
  margin-left: -50px; /* Applies a negative margin to bring half the */
  opacity: 80%;
}

.backButt:hover {
  opacity: 100%;
}

.nextButt:hover {
  opacity: 100%;
}
.article-content {
  padding-left: 50px;
  padding-right: 50px;
  padding-bottom: 5px;
}

.up-down {
  display: flex;
  flex-direction: column;
  gap: 1px;
}

.carousel-navigation {
  display: flex;
  flex-direction: row;
  justify-content: center;
  margin-bottom: 15px;
}
.voting-info svg {
  width: 50px;
  height: 50px;
}
.animateInt {
  transition: fill 1s ease-in-out;
}

.animateRel {
  transition: stroke-opacity 1.9s ease-in-out;
}

.animateRel {
  stroke-opacity: 0.9;
}

/* .animateRel {
  transition: stroke-dashoffset 2.5s ease;
}

.animateRel {
  stroke-dashoffset: 0;
}

.hideRel {
  stroke-dasharray: 1000; /* Set a large dash array */
/* stroke-dashoffset: 1000;
}  */

.animateInt {
  fill: #ffff00;
}

.content-and-vote {
  display: flex;
  flex-direction: row;
  align-items: stretch;
  justify-content: space-around;
}

* body {
  background-color: grey;
}
.voting-info svg:hover {
  cursor: pointer;
}

.searchbar {
  border-radius: 5px;
  padding: 7px;
  margin: 10px;
}
.searchDiv {
  min-height: 100vh;
}
